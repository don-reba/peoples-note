#pragma once

/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#include <fstream>
#include <map>
#include <set>
#include <string>
#include <vector>
#include <windows.h>
#include <Thrift/Thrift.h>
#include <Thrift/Protocol.h>
#include <Thrift/Transport.h>
#include <Evernote/EDAM/Limits.h>


namespace Evernote
{
namespace EDAM
{
namespace Types
{

class SharedNotebook
{
public:

	struct Isset
	{
		bool id;
		bool userId;
		bool notebookGuid;
		bool email;
		bool notebookModifiable;
		bool requireLogin;
		bool serviceCreated;
		bool shareKey;
		bool username;
	};

	__int64 id;
	__int32 userId;
	Thrift::Protocol::TString notebookGuid;
	Thrift::Protocol::TString email;
	bool notebookModifiable;
	bool requireLogin;
	Timestamp serviceCreated;
	Thrift::Protocol::TString shareKey;
	Thrift::Protocol::TString username;

	Isset __isset;

	SharedNotebook();
	virtual ~SharedNotebook() throw() {}

	void Read(Thrift::Protocol::TProtocol & iprot);
	void Write(Thrift::Protocol::TProtocol & oprot);
};
} // Types
} // EDAM
} // Evernote
