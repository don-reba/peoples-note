#pragma once

/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */

#include <fstream>
#include <map>
#include <set>
#include <string>
#include <vector>
#include <windows.h>
#include <Thrift/Thrift.h>
#include <Thrift/Protocol.h>
#include <Thrift/Transport.h>
#include <Evernote/EDAM/Types.h>
#include <Evernote/EDAM/Error.h>


namespace Evernote
{
namespace EDAM
{
namespace UserStore
{

class AuthenticationResult
{
public:

	struct Isset
	{
		bool user;
		bool publicUserInfo;
	};

	Evernote::EDAM::Types::Timestamp currentTime;
	Thrift::Protocol::TString authenticationToken;
	Evernote::EDAM::Types::Timestamp expiration;
	Evernote::EDAM::Types::User user;
	PublicUserInfo publicUserInfo;

	Isset __isset;

	AuthenticationResult();
	virtual ~AuthenticationResult() throw() {}

	void Read(Thrift::Protocol::TProtocol & iprot);
	void Write(Thrift::Protocol::TProtocol & oprot);
};
} // UserStore
} // EDAM
} // Evernote
